@startuml

title Creating or editing query

!include ../styles.puml
!include ../utils.puml
!include EditQueryGeneral.puml
!include EditQuerySource.puml
!include EditQueryFields.puml
!include EditQueryConditions.puml

(*) --> [open query edit dialog] display(EditQueryGeneralView)
-> display(EditQuerySourceView)
-> display(EditQueryFieldsView)
-> display(EditQueryConditionsView)

partition Actions {
   partition Save  {
       EditQueryGeneralViewContainer    ..>   ===StartQueryValidation===
       EditQueryFieldsViewContainer     ..>  ===StartQueryValidation===
       EditQuerySourceViewContainer     ..>  ===StartQueryValidation===
       EditQueryGeneralViewContainer    ..>  ===StartQueryValidation===

       ===StartQueryValidation===  --> [ajax] "Check if given
       query name is unique" as QueryNameValidation
       ===StartQueryValidation===  --> [ajax] "Validate selected
       source by ID" as SourceValidation
       ===StartQueryValidation===  --> [ajax] "Validate fields selected" as FieldsValidation
       ===StartQueryValidation===  --> [ajax] "Validate condition fields" as ConditionsValidation
       QueryNameValidation --> ===StopQueryValidation===
       SourceValidation --> ===StopQueryValidation===
       FieldsValidation --> ===StopQueryValidation===
       ConditionsValidation --> ===StopQueryValidation===

       if "Input correct?" as QueryValid then
        --> [yes] "Remove prepared conditions for remove" as RemovePreparedCondition
        --> "Remove prepared fields for remove" as RemovePreparedField
        --> "Save prepared conditions" as SavingPreparedConditions
        --> "Save prepared fields" as SavingPreparedFields
        --> "Save prepared source ID"
        --> "Save query name "
        --> "Save user ID"
        --> "Notify this query saving is complete"
       else
        --> [no] Highlight wrong fields
        --> Notify error messages
        --> Let display dialog on the same state
       endif
   }

   partition "Remove field" {
       EditQueryFieldsViewContainer ..> "<&trash>  Remove field" as RemoveQueryField
       RemoveQueryField --> "Prepare remove query field" as PrepareRemoveQueryField
       --> "Remove query field table row"
       PrepareRemoveQueryField ..> RemovePreparedField

   }
   partition "Add field" {
       EditQueryFieldsViewContainer ..> "Add field" as AddQueryField
       AddQueryField --> "Add field as new table row"
       --> "Prepare field to be saved"
       ..> SavingPreparedFields
   }

   partition "Remove condition" {
       EditQueryConditionsViewContainer ..> "<&trash> Remove condition" as RemoveQueryCondition
       RemoveQueryCondition --> "Prepare condition to be removed after save" as PrepareRemoveQueryCondition
       PrepareRemoveQueryCondition --> "Hide removed condition table row"
       PrepareRemoveQueryCondition ..> RemovePreparedCondition
   }

   partition "Add condition" {
       EditQueryConditionsViewContainer ..> "Check input alias name" as AddQueryCondition
       AddQueryCondition --> "Add new condition row" as NewConditionRow
       NewConditionRow --> "Prepare condition to be saved" as AddPreparedCondition
       AddPreparedCondition ..> SavingPreparedConditions
   }

   partition "Canceling / Quit" {
       EditQueryGeneralViewContainer   ..> "Cancel" as CancelSaveQuery
       EditQueryFieldsViewContainer    ..> CancelSaveQuery
       EditQuerySourceViewContainer    ..> CancelSaveQuery
       EditQuerySourceViewContainer    ..> CancelSaveQuery
       CancelSaveQuery -->  "Cancel any changes"
        --> [Close dialog] (*)
   }
}

legend
    <&trash> - Remove button
end legend

@enduml